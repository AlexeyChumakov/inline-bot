// –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
const { Markup } = require("telegraf");
const contentParser = require("./data/contentParser");

console.log("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã...");

try {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö
  const marketplacesContent = contentParser.get("marketplaces");
  console.log("‚úÖ –î–∞–Ω–Ω—ã–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:", !!marketplacesContent);
  console.log("‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤:", marketplacesContent.list?.length || 0);

  // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤
  const buttons = marketplacesContent.list.map((mp) =>
    Markup.button.callback(mp.button_text, `marketplace_${mp.id}`)
  );
  console.log("‚úÖ –ö–Ω–æ–ø–∫–∏ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ —Å–æ–∑–¥–∞–Ω—ã:", buttons.length);

  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º
  buttons.push(Markup.button.callback("üîô –ù–∞–∑–∞–¥", "back_to_main"));
  console.log("‚úÖ –ö–Ω–æ–ø–∫–∞ '–ù–∞–∑–∞–¥' –¥–æ–±–∞–≤–ª–µ–Ω–∞, –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫:", buttons.length);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ —è–≤–ª—è—é—Ç—Å—è –æ–±—ä–µ–∫—Ç–∞–º–∏
  const allButtonsAreObjects = buttons.every(btn => typeof btn === 'object' && btn !== null);
  console.log("‚úÖ –í—Å–µ –∫–Ω–æ–ø–∫–∏ —è–≤–ª—è—é—Ç—Å—è –æ–±—ä–µ–∫—Ç–∞–º–∏:", allButtonsAreObjects);

  // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
  const keyboard = Markup.inlineKeyboard(buttons, { columns: 1 });
  console.log("‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞:", !!keyboard);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
  console.log("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞:", keyboard.reply_markup && keyboard.reply_markup.inline_keyboard);

  console.log("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ! –û—à–∏–±–∫–∞ —Å InlineKeyboardButton –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞.");

} catch (error) {
  console.error("‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö:", error.message);
  console.error("‚ùå –°—Ç–µ–∫ –æ—à–∏–±–∫–∏:", error.stack);
  process.exit(1);
}
